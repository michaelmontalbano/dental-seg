name: Build nnU-Net Training Containers

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'nnunet/container_nnunet/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dataset:
          - {id: 300, name: "BoneLoss"}
          - {id: 301, name: "CoreAnatomicalStructures"}
          - {id: 302, name: "ImplantFeatures"}
          - {id: 305, name: "AdultTeeth"}
          - {id: 307, name: "ToothSurfacesBoundaries"}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nnunet
        run: |
          cd nnunet/container_nnunet
          
          # Create a temporary train.py with the right defaults
          cp train.py train_temp.py
          sed -i "s/default=302/default=${{ matrix.dataset.id }}/" train_temp.py
          sed -i "s/default='Dataset[0-9]*_[^']*'/default='Dataset${{ matrix.dataset.id }}_${{ matrix.dataset.name }}'/" train_temp.py
          
          # Build with modified train.py
          docker build \
            --build-arg DATASET_ID=${{ matrix.dataset.id }} \
            -f Dockerfile \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:train-dataset-${{ matrix.dataset.id }} .
          
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:train-dataset-${{ matrix.dataset.id }}
          
          # Clean up
          rm train_temp.py