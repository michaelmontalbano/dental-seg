FROM nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04

WORKDIR /opt/ml/code

# Install Python and essential packages in one layer to reduce size
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3-pip \
    python3-dev \
    git \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Create python symlink for compatibility
RUN ln -s /usr/bin/python3 /usr/bin/python

# Upgrade pip
RUN pip3 install --no-cache-dir --upgrade pip

# Copy requirements and install in one layer with no-cache-dir
COPY requirements.txt ./
RUN pip3 install --no-cache-dir -r requirements.txt

# Set up nnU-Net environment variables
ENV nnUNet_raw="/opt/ml/input/data/training"
ENV nnUNet_preprocessed="/tmp/nnUNet_preprocessed"
ENV nnUNet_results="/opt/ml/model"
ENV nnUNet_n_proc_DA=8

# Copy training script
COPY train.py ./

# Make the training script executable
RUN chmod +x train.py

# Set Python unbuffered for better logging
ENV PYTHONUNBUFFERED=1

# Tell SageMaker which Python program to run
ENV SAGEMAKER_PROGRAM=train.py
ENV SAGEMAKER_SUBMIT_DIRECTORY=/opt/ml/code

# Create necessary directories
RUN mkdir -p /opt/ml/input/data/training \
    /opt/ml/model \
    /opt/ml/output \
    /tmp/nnUNet_preprocessed

# No ENTRYPOINT - let SageMaker handle execution
